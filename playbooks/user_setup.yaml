---
- name: Configure a non-root user
  hosts: all
  become: true
  gather_facts: true

  vars:
    export_passwd_to: "../.passwords"

  vars_prompt:
    - name: update_password
      prompt: "Do you want to set or update the user's password? (yes/no)"
      private: false
      default: "no"

  tasks:
    - name: Include variables from normal_setup
      ansible.builtin.include_vars:
        file: "../inventory/group_vars/normal_setup.yaml"
        name: normal_vars

    - name: Ask for new password if user agreed
      ansible.builtin.pause:
        prompt: "Enter the new user's password (leave blank to generate a random one)"
        echo: false
      register: user_password_input
      when: update_password | lower == "yes"

    - name: Set user_password fact
      ansible.builtin.set_fact:
        user_password: "{{ user_password_input.user_input | default('') }}"
      when: update_password | lower == "yes"

    - name: Generate random password if not provided
      when: update_password | lower == "yes" and (user_password is not defined or user_password | length == 0)
      ansible.builtin.set_fact:
        user_password: "{{ lookup('password', '/dev/null length=16 chars=ascii_letters,digits') }}"

    - name: Save password localy
      when: update_password | lower == "yes"
      become: false
      block:
        - name: Ensure directory existence
          delegate_to: localhost
          ansible.builtin.file:
            path: "{{ export_passwd_to }}"
            state: directory
            mode: "0700"

        - name: Save to file
          delegate_to: localhost
          ansible.builtin.copy:
            dest: "{{ export_passwd_to }}/{{ normal_vars.ansible_user }}.txt"
            content: "{{ user_password }}"
            mode: "0600"

    - name: Create new user
      ansible.builtin.user:
        name: "{{ normal_vars.ansible_user }}"
        shell: /bin/bash
        groups: sudo
        append: true
        create_home: true
        password: "{{ user_password | password_hash('sha512') if update_password | lower == 'yes' else omit }}"

    - name: Add umask to .bashrc
      ansible.builtin.lineinfile:
        path: "/home/{{ normal_vars.ansible_user }}/.bashrc"
        line: "umask 0077"
        insertafter: EOF
        owner: "{{ normal_vars.ansible_user }}"
        group: "{{ normal_vars.ansible_user }}"

    - name: Create .ssh directory
      ansible.builtin.file:
        path: "/home/{{ normal_vars.ansible_user }}/.ssh"
        state: directory
        mode: "0700"
        owner: "{{ normal_vars.ansible_user }}"
        group: "{{ normal_vars.ansible_user }}"

    - name: Add SSH public key # noqa syntax-check[unknown-module]
      ansible.builtin.authorized_key:
        user: "{{ normal_vars.ansible_user }}"
        key: "{{ lookup('file', normal_vars.ans_ssh_public_key_file) }}"
        state: present

    - name: User successfuly added
      ansible.builtin.debug:
        msg: |
          âœ… User: '{{ normal_vars.ansible_user }}' successfully configured on your hosts!
