---
- name: Add a non-root user
  hosts: all
  become: true
  gather_facts: true

  vars:
    export_passwd_to: "../../.passwords"

  tasks:
    - name: Determine new username
      block:
        - name: Ask for username
          ansible.builtin.pause:
            prompt: "Enter your username [{{ ans_normal_user }}]"
          register: username_answer
        - name: Set username variable
          set_fact:
            user_name: "{{ username_answer.user_input | default(ans_normal_user, true) }}"

    - name: Determine new user password
      block:
        - name: Ask for change password
          ansible.builtin.pause:
            prompt: "Do you want change the {{ user_name }}`s password? (yes/no) [yes]"
          register: update_password_answer
        - name: Set update_password with default
          ansible.builtin.set_fact:
            update_password: "{{ update_password_answer.user_input | default('yes', true) | lower }}"

        - name: Ask for new password
          when: update_password | lower == "yes"
          no_log: true
          ansible.builtin.pause:
            prompt: "Enter the new {{ user_name }}'s password (leave blank to generate a random one)"
            echo: false
          register: user_password_answer
        - name: Set user_password fact
          when: update_password | lower == "yes"
          no_log: true
          ansible.builtin.set_fact:
            user_password: "{{ user_password_answer.user_input | default('') }}"

        - name: Generate random password if not provided
          when: update_password | lower == "yes" and (user_password is not defined or user_password | length == 0)
          ansible.builtin.set_fact:
            user_password: "{{ lookup('password', '/dev/null length=16 chars=ascii_letters,digits') }}"

    - name: Save password localy
      when: update_password | lower == "yes"
      become: false
      block:
        - name: Ensure directory existence
          delegate_to: localhost
          ansible.builtin.file:
            path: "{{ export_passwd_to }}"
            state: directory
            mode: "0700"

        - name: Save to file
          delegate_to: localhost
          ansible.builtin.copy:
            dest: "{{ export_passwd_to }}/{{ user_name }}.txt"
            content: "{{ user_password }}"
            mode: "0600"

    - name: Confige new user
      block:
        - name: Create user
          ansible.builtin.user:
            name: "{{ user_name }}"
            shell: /bin/bash
            groups: sudo
            append: true
            create_home: true
            password: "{{ user_password | password_hash('sha512') if update_password | lower == 'yes' else omit }}"

        - name: Add umask to .bashrc
          ansible.builtin.lineinfile:
            path: "/home/{{ user_name }}/.bashrc"
            line: "umask 0077"
            insertafter: EOF
            owner: "{{ ans_normal_user }}"
            group: "{{ ans_normal_user }}"

    - name: Configure ssh for user
      block:
        - name: Create .ssh directory
          ansible.builtin.file:
            path: "/home/{{ user_name }}/.ssh"
            state: directory
            mode: "0700"
            owner: "{{ user_name }}"
            group: "{{ user_name }}"

        - name: Add SSH public key # noqa syntax-check[unknown-module]
          ansible.builtin.authorized_key:
            user: "{{ user_name }}"
            key: "{{ lookup('file', ans_ssh_public_key) }}"
            state: present

    - name: User successfuly added
      ansible.builtin.debug:
        msg: |
          âœ… User: '{{ user_name }}' successfully configured on your hosts!
