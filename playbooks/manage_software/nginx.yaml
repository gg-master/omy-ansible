---
- name: Configure nginx
  hosts: all
  become: true

  vars:
    nginx_conf: /etc/nginx/nginx.conf
    stream_dir: /etc/nginx/stream-enabled
    sites_avail: /etc/nginx/sites-available
    sites_enabl: /etc/nginx/sites-enabled
    proxy_conf: /etc/nginx/stream-enabled/proxy.conf

  tasks:
    - name: Install nginx
      when: uninstall is not defined or not uninstall
      block:
        - name: Ensure nginx-full is installed
          ansible.builtin.apt:
            name: nginx-full
            state: present
            update_cache: true

        - name: Ensure nginx dirs exist
          ansible.builtin.file:
            path: "{{ item }}"
            state: directory
            owner: "{{ ans_normal_user }}"
            group: "{{ ans_normal_user }}"
            mode: '0755'
          loop:
            - "{{ sites_avail }}"
            - "{{ sites_enabl }}"
            - "{{ stream_dir }}"

        - name: Ensure proxy.conf exists and has base config
          block:
            - name: Check if proxy.conf exists and is non-empty
              ansible.builtin.stat:
                path: "{{ proxy_conf }}"
              register: proxy_stat

            - name: Create or populate proxy.conf if missing or empty
              when: not proxy_stat.stat.exists or proxy_stat.stat.size == 0
              ansible.builtin.copy:
                dest: "{{ proxy_conf }}"
                owner: "{{ ans_normal_user }}"
                group: "{{ ans_normal_user }}"
                mode: '0644'
                content: |
                  map $ssl_preread_server_name $sni_name {
                      hostnames;
                  }

                  server {
                      listen 443;
                      proxy_pass $sni_name;
                      ssl_preread on;
                  }

        - name: Ensure 'stream' block with include exists in nginx.conf
          ansible.builtin.blockinfile:
            path: "{{ nginx_conf }}"
            marker: "# {mark} ANSIBLE MANAGED BLOCK - STREAM CONFIG"
            block: |
              stream {
                    include /etc/nginx/stream-enabled/*.conf;
              }
            insertafter: EOF
            backup: true

        - name: Ensure 'http' block includes sites-enabled
          ansible.builtin.lineinfile:
            path: "{{ nginx_conf }}"
            regexp: '^\s*include\s+/etc/nginx/sites-enabled/\*;'
            line: '        include /etc/nginx/sites-enabled/*;'
            insertafter: '^http\s*\{'
            backup: true
            state: present

        - name: Test nginx config
          ansible.builtin.command: nginx -t
          register: nginx_test
          changed_when: false
          failed_when: "'successful' not in nginx_test.stderr"

        - name: Reload nginx on valid config
          when: "'successful' in nginx_test.stderr"
          ansible.builtin.service:
            name: nginx
            state: reloaded

        - name: Allow ports 80 and 443 through UFW # noqa syntax-check[unknown-module]
          community.general.ufw:
            rule: allow
            port: "{{ item }}"
            proto: tcp
          loop:
            - "80"
            - "443"

        - name: Ensure UFW is enabled
          community.general.ufw:
            state: enabled

    - name: Uninstall nginx
      when: uninstall is defined and uninstall
      block:
        - name: Stop nginx service
          ignore_errors: true
          ansible.builtin.service:
            name: nginx
            state: stopped

        - name: Backup nginx configs
          ignore_errors: true
          ansible.builtin.copy:
            src: "/etc/nginx"
            dest: "/etc/nginx.backup{{ lookup('pipe', 'date +%Y%m%d_%H%M%S') }}"
            owner: "{{ ans_normal_user }}"
            group: "{{ ans_normal_user }}"
            mode: '0755'
            remote_src: true

        - name: Remove nginx and related packages
          ansible.builtin.apt:
            name:
              - nginx
              - nginx-full
              - nginx-common
              - nginx-core
            state: absent
            purge: true
            autoremove: true

        - name: Remove nginx dirs
          ansible.builtin.file:
            path: "{{ item }}"
            state: absent
          loop:
            - /etc/nginx
            - /var/log/nginx
            - /var/lib/nginx

        - name: Revoke UFW ports for nginx
          community.general.ufw:
            rule: deny
            port: "{{ item }}"
            proto: tcp
          loop:
            - "80"
            - "443"
